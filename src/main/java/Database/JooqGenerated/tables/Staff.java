/*
 * This file is generated by jOOQ.
*/
package Database.JooqGenerated.tables;


import Database.JooqGenerated.DefaultSchema;
import Database.JooqGenerated.Keys;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Staff extends TableImpl<Record> {

    private static final long serialVersionUID = 318055304;

    /**
     * The reference instance of <code>Staff</code>
     */
    public static final Staff STAFF = new Staff();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>Staff.SID</code>.
     */
    public final TableField<Record, Integer> SID = createField("SID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>Staff.Name</code>.
     */
    public final TableField<Record, String> NAME = createField("Name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Staff.Username</code>.
     */
    public final TableField<Record, String> USERNAME = createField("Username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>Staff.Password</code>.
     */
    public final TableField<Record, String> PASSWORD = createField("Password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>Staff</code> table reference
     */
    public Staff() {
        this("Staff", null);
    }

    /**
     * Create an aliased <code>Staff</code> table reference
     */
    public Staff(String alias) {
        this(alias, STAFF);
    }

    private Staff(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Staff(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Integer> getIdentity() {
        return Keys.IDENTITY_STAFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.PK_STAFF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.PK_STAFF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Staff as(String alias) {
        return new Staff(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Staff rename(String name) {
        return new Staff(name, null);
    }
}
