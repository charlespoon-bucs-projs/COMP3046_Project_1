/*
 * This file is generated by jOOQ.
*/
package org.comp3046.it9.Database.JooqGenerated.tables;


import org.comp3046.it9.Database.JooqGenerated.DefaultSchema;
import org.comp3046.it9.Database.JooqGenerated.Keys;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.1"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Customer extends TableImpl<Record> {

    /**
     * The reference instance of <code>Customer</code>
     */
    public static final Customer CUSTOMER = new Customer();
    private static final long serialVersionUID = -408294226;
    /**
     * The column <code>Customer.UID</code>.
     */
    public final TableField<Record, Integer> UID = createField("UID", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>Customer.Name</code>.
     */
    public final TableField<Record, String> NAME = createField("Name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>Customer.Salutation</code>.
     */
    public final TableField<Record, String> SALUTATION = createField("Salutation", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>Customer.Username</code>.
     */
    public final TableField<Record, String> USERNAME = createField("Username", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>Customer.Mobile</code>.
     */
    public final TableField<Record, Integer> MOBILE = createField("Mobile", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>Customer.Email</code>.
     */
    public final TableField<Record, String> EMAIL = createField("Email", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>Customer.Password</code>.
     */
    public final TableField<Record, String> PASSWORD = createField("Password", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");
    /**
     * The column <code>Customer.Birthday</code>.
     */
    public final TableField<Record, String> BIRTHDAY = createField("Birthday", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>Customer</code> table reference
     */
    public Customer() {
        this("Customer", null);
    }

    /**
     * Create an aliased <code>Customer</code> table reference
     */
    public Customer(String alias) {
        this(alias, CUSTOMER);
    }

    private Customer(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Customer(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Integer> getIdentity() {
        return Keys.IDENTITY_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.PK_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.PK_CUSTOMER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Customer as(String alias) {
        return new Customer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Customer rename(String name) {
        return new Customer(name, null);
    }
}
